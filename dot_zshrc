
zstyle ':antidote:bundle' use-friendly-names 'yes'
zstyle ':zsh-utils:plugins:history' use-xdg-basedirs 'no'
source ${ZDOTDIR:-~}/.antidote/antidote.zsh

if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

# set omz variables
ZSH=$(antidote path ohmyzsh/ohmyzsh)
ZSH_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/oh-my-zsh"
[[ -d $ZSH_CACHE_DIR ]] || mkdir -p $ZSH_CACHE_DIR
[[ -d $ZSH_CACHE_DIR/completions ]] || mkdir -p $ZSH_CACHE_DIR/completions

antidote load

eval "$(starship init zsh)"

# Define an init function and append to zvm_after_init_commands
function fzf_init() {
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
}
zvm_after_init_commands+=(fzf_init)

export CONFIG_DIR="$HOME/.config/lazygit"
export K9SCONFIG=~/.config/k9s/

# optionally: local .zshrc
[ -f ~/.zshrc-local ] && source ~/.zshrc-local

# Go path:
path+=("$(go env GOPATH)/bin")
path+=("$HOME/.krew/bin")

export PATH
export EDITOR=nvim

# kubernetes helper functions
function klogin() {
  unset KUBECONFIG
  kubectl-login
  cat $HOME/.kube/config | yq eval '.users[0].user.as = .users[0].name' - | yq eval '.users[0].user.as-groups = ["system:masters"]' - > $HOME/.kube/config-sudo;
}

function ksuper() {
    export KUBECONFIG=$HOME/.kube/config-sudo
}

